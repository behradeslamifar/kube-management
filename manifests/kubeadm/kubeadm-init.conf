kind: ClusterConfiguration
kubernetesVersion: 1.22.4
dns:
  type: CoreDNS
etcd:
  local:
    serverCertSANs:
    - "192.168.10.154"
    - "master2-0"
    - "192.168.10.155"
    - "master2-1"
    - "192.168.10.156"
    - "master2-2"
    peerCertSANs:
    - "192.168.10.154"
    - "master2-0"
    - "192.168.10.155"
    - "master2-1"
    - "192.168.10.156"
    - "master2-2"

networking:
  serviceSubnet: "10.96.0.0/12"
  podSubnet: "192.168.0.0/16"
  dnsDomain: "cluster.local"
apiServer:
  certSANs:
  - kubernetes
  - kubernetes.default
  - kubernetes.default.svc
  - kubernetes.default.svc.cluster.local
  - localhost
  - 127.0.0.1
  - cluster.local
  - master2-0
  - master2-1
  - master2-2
  - 192.168.10.150
  - 192.168.10.154
  - 192.168.10.155
  - 192.168.10.156
  extraArgs:
    authorization-mode: "Node,RBAC"
    enable-admission-plugins: "PodNodeSelector,NamespaceLifecycle"
    audit-policy-file: "/etc/kubernetes/audit.yml"
    audit-log-path: "/var/log/kubernetes/audit/audit.log"
    audit-log-maxage: "30"
    audit-log-maxsize: "200"
    audit-log-maxbackup: "10"
controlPlaneEndpoint: "192.168.10.150:8443"
certificatesDir: "/etc/kubernetes/pki"
imageRepository: "k8s.gcr.io"
useHyperKubeImage: false
clusterName: "cluster.local"
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.10.154
nodeRegistration:
  criSocket: /var/run/containerd/containerd.sock
  imagePullPolicy: IfNotPresent
  kubeletExtraArgs:
    node-ip: "$INTERNALIP"
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "192.168.0.0/16"
mode: "ipvs"

